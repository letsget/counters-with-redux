{"version":3,"sources":["components/Counter.js","actions/index.js","components/Counters.js","services/CounterService.js","components/Total.js","components/MaxCounter.js","components/AddCounter.js","components/CountersNumber.js","components/MasterReset.js","components/RemoveAllCounters.js","App.js","reducers/counterReducer.js","reducers/index.js","index.js"],"names":["Counter","count","incrementCount","decrementCount","resetCount","removeCounter","index","className","onClick","disabled","type","payload","getTotalCount","counters","connect","state","props","map","c","key","_id","reduce","a","e","totalCount","badgeClasses","classNames","maxCount","undefined","newCounter","length","masterReset","removeAllCounters","App","shortid","require","initialState","store","generate","counterReducer","action","i","filter","el","idx","combineReducers","createStore","reducers","dispatch","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58e18bd6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Counter = ({\n  count,\n  incrementCount,\n  decrementCount,\n  resetCount,\n  removeCounter,\n  index,\n}) => {\n  return (\n    <div className=\"counter\">\n      <div\n        onClick={() => incrementCount(index)}\n        className=\"btn btn-primary m-2\"\n      >\n        <i className=\"fas fa-plus\" />\n      </div>\n      <button\n        onClick={() => decrementCount(index)}\n        disabled={count < 1}\n        className=\"btn btn-primary m-2\"\n      >\n        <i className=\"fas fa-minus\" />\n      </button>\n      <button\n        onClick={() => resetCount(index)}\n        disabled={count < 1}\n        className=\"btn btn-danger m-2\"\n      >\n        reset\n      </button>\n      <div onClick={() => removeCounter(index)}>\n        <i className=\"fas fa-trash\" />\n      </div>\n      <span\n        className={\n          count < 1 ? \"badge badge-secondary m-2\" : \"badge badge-success m-2\"\n        }\n      >\n        {count}\n      </span>\n    </div>\n  );\n};\n\nexport default Counter;\n","// ACTIONS AND TYPES\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\nexport const NEW_COUNTER = \"NEW_COUNTER\";\nexport const REMOVE_COUNTER = \"REMOVE_COUNTER\";\nexport const MASTER_RESET = \"MASTER_RESET\";\nexport const REMOVE_ALL_COUNTERS = \"REMOVE_ALL_COUNTERS\";\nexport const GET_TOTAL_COUNT = \"GET_TOTAL_COUNT\";\n\n// ACTIONS CREATORS\nexport const incrementCount = (index) => {\n  return {\n    type: INCREMENT,\n    payload: { index },\n  };\n};\n\nexport const decrementCount = (index) => {\n  return {\n    type: DECREMENT,\n    payload: { index },\n  };\n};\n\nexport const resetCount = (index) => {\n  return {\n    type: RESET,\n    payload: { index },\n  };\n};\n\nexport const newCounter = () => {\n  return {\n    type: NEW_COUNTER,\n    payload: {},\n  };\n};\n\nexport const removeCounter = (index) => {\n  return {\n    type: REMOVE_COUNTER,\n    payload: { index },\n  };\n};\n\nexport const masterReset = () => {\n  return {\n    type: MASTER_RESET,\n    payload: {},\n  };\n};\n\nexport const removeAllCounters = () => {\n  return {\n    type: REMOVE_ALL_COUNTERS,\n    payload: {},\n  };\n};\n\nexport const getTotalCount = (counters) => {\n  return {\n    type: GET_TOTAL_COUNT,\n    payload: 0,\n  };\n};\n","import React from \"react\";\nimport Counter from \"./Counter\";\nimport {\n  incrementCount,\n  decrementCount,\n  resetCount,\n  removeCounter,\n  getTotalCount,\n} from \"../actions/\";\nimport { connect } from \"react-redux\";\n\nconst Counters = (props) => {\n  const renderCounters = () => {\n    return props.counters.map((c, index) => {\n      return (\n        <Counter\n          key={c._id}\n          index={index}\n          count={c.count}\n          incrementCount={props.incrementCount}\n          decrementCount={props.decrementCount}\n          resetCount={props.resetCount}\n          removeCounter={props.removeCounter}\n        />\n      );\n    });\n  };\n  return <div className=\"container\">{renderCounters()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {\n    incrementCount,\n    decrementCount,\n    resetCount,\n    removeCounter,\n    getTotalCount,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Counters);\n","export const getTotalCount = (counters) => {\n  return counters.reduce((a, e) => a + e.count, 0);\n};\n\nexport const getMaxCount = (counters) => {\n  return counters.reduce((a, e) => (a > e.count ? a : e.count), 0);\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { getTotalCount } from \"../services/CounterService\";\n\nconst Total = (props) => {\n  const totalCount = getTotalCount(props.counters);\n\n  const badgeClasses = classNames(\"badge m-2\", {\n    \"badge-secondary\": totalCount < 1,\n    \"badge-success\": totalCount > 0,\n  });\n\n  return (\n    <h2>\n      Total Count:\n      <span className={badgeClasses}>{totalCount}</span>\n    </h2>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nexport default connect(mapStateToProps)(Total);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { getMaxCount } from \"../services/CounterService\";\n\nconst MaxCounter = (props) => {\n  const maxCount = getMaxCount(props.counters);\n\n  const badgeClasses = classNames(\"badge m-2\", {\n    \"badge-secondary\": maxCount < 1,\n    \"badge-success\": maxCount > 0,\n  });\n\n  return (\n    <h2>\n      Max Counter:\n      <span className={badgeClasses}>{maxCount}</span>\n    </h2>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nexport default connect(mapStateToProps)(MaxCounter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { newCounter } from \"../actions\";\n\nfunction AddCounter(props) {\n  return (\n    <div onClick={() => props.newCounter()} className=\"btn btn-primary\">\n      Add Counter\n    </div>\n  );\n}\n\nexport default connect(undefined, { newCounter })(AddCounter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction CountersNumber(props) {\n  return (\n    <h2>\n      Number of counters:{\" \"}\n      <span\n        className={\n          props.counters.length < 1\n            ? \"badge badge-secondary m-2\"\n            : \"badge badge-success m-2\"\n        }\n      >\n        {props.counters.length}\n      </span>\n    </h2>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nexport default connect(mapStateToProps)(CountersNumber);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { masterReset } from \"../actions\";\nimport { getTotalCount } from \"../services/CounterService\";\n\nfunction MasterReset(props) {\n  const totalCount = getTotalCount(props.counters);\n\n  if (props.counters.length > 0) {\n    return (\n      <button\n        onClick={() => props.masterReset()}\n        className=\"btn btn-danger m-2\"\n        disabled={totalCount < 1}\n      >\n        Reset All\n      </button>\n    );\n  } else {\n    return null;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nexport default connect(mapStateToProps, { masterReset })(MasterReset);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeAllCounters } from \"../actions\";\n\nconst RemoveAllCounters = (props) => {\n  if (props.counters.length > 0) {\n    return (\n      <button\n        onClick={() => props.removeAllCounters()}\n        className=\"btn btn-danger m-2\"\n      >\n        DELETE ALL\n      </button>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counters: state.counters,\n  };\n};\n\nexport default connect(mapStateToProps, { removeAllCounters })(\n  RemoveAllCounters\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport Counters from \"./components/Counters\";\nimport Total from \"./components/Total\";\nimport MaxCounter from \"./components/MaxCounter\";\nimport AddCounter from \"./components/AddCounter\";\nimport CountersNumber from \"./components/CountersNumber\";\nimport MasterReset from \"./components/MasterReset\";\nimport RemoveAllCounters from \"./components/RemoveAllCounters\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <CountersNumber />\n      <Total />\n      <MaxCounter />\n      <AddCounter />\n      <MasterReset />\n      <RemoveAllCounters />\n      <Counters />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  INCREMENT,\n  DECREMENT,\n  RESET,\n  NEW_COUNTER,\n  REMOVE_COUNTER,\n  MASTER_RESET,\n  REMOVE_ALL_COUNTERS,\n  GET_TOTAL_COUNT,\n} from \"../actions\";\nconst shortid = require(\"shortid\");\nconst initialState = [];\n\nconst store = [\n  {\n    _id: shortid.generate(),\n    count: 0,\n  },\n  {\n    _id: shortid.generate(),\n    count: 5,\n  },\n  {\n    _id: shortid.generate(),\n    count: 10,\n  },\n];\n\nconst counterReducer = (state = store, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return state.map((c, i) => {\n        if (action.payload.index === i) {\n          c.count += 1;\n        }\n        return c;\n      });\n    case DECREMENT:\n      return state.map((c, i) => {\n        if (action.payload.index === i) {\n          c.count === 0 ? (c.count = 0) : (c.count -= 1);\n        }\n        return c;\n      });\n    case RESET:\n      return state.map((c, i) => {\n        if (action.payload.index === i) {\n          c.count = 0;\n        }\n        return c;\n      });\n    case REMOVE_COUNTER:\n      return state.filter((el, idx) => idx !== action.payload.index);\n    case MASTER_RESET:\n      return state.map((c) => {\n        return { ...c, count: 0 };\n      });\n    case NEW_COUNTER:\n      return [...state, { _id: shortid.generate(), count: 0 }];\n    case REMOVE_ALL_COUNTERS:\n      return (state = initialState);\n    case GET_TOTAL_COUNT:\n      return action.payload.counters.reduce((a, e) => a + e.count, 0);\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","import { combineReducers } from \"redux\";\nimport counterReducer from \"./counterReducer\";\n\nexport default combineReducers({\n  counters: counterReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(reducers);\nstore.dispatch({ type: \"MASTER_RESET\" });\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}